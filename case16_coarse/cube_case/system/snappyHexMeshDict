/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7  
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
// Which of the steps to run
castellatedMesh true;
snap            false;
addLayers       false;


// Geometry. Definition of all surfaces. All surfaces are of class
// searchableSurface.
// Surfaces are used
// - to specify refinement for any mesh cell intersecting it
// - to specify refinement for any mesh cell inside/outside/near
// - to 'snap' the mesh boundary to the surface
geometry
{

    sphere0
    {
        type searchableSphere;
        centre  (0 0 0);
        radius  20;
    }	

    sphere1
    {
        type searchableSphere;
        centre  (0 0 0);
        radius  40;
    }	

    sphere2
    {
        type searchableSphere;
        centre  (0 0 0);
        radius  60;
    }	

    Buildings
    {
        type triSurfaceMesh;
        file "cube_ref0.stl";
    }

};


// Settings for the castellatedMesh generation.
castellatedMeshControls
{

    maxLocalCells 1000000;
    maxGlobalCells 20000000;
    minRefinementCells 0;
    maxLoadUnbalance 0.10;
    nCellsBetweenLevels 3;
    features
    (
        
	{
            file "cube_ref0.eMesh";
            level 3;
        }

    );

    refinementSurfaces
    {
        Buildings
        {
            // Surface-wise min and max refinement level
            level (3 3);

            //- Optional angle to detect small-large cell situation
            //  perpendicular to the surface. Is the angle of face w.r.t.
            //  the local surface normal. Use on flat(ish) surfaces only.
            //  Otherwise leave out or set to negative number.
            // perpendicularAngle 10;


            //- Optional faceZone and (for closed surface) cellZone with
            //  how to select the cells that are in the cellZone
            //  (inside / outside / specified insidePoint)
            // faceZone sphere;
            // cellZone sphere;
            // cellZoneInside inside;  // outside/insidePoint
        }

    }

    resolveFeatureAngle 10;

    refinementRegions
    {
	sphere0
        {
            mode inside;
            levels ((1E15 3));
        }

	sphere1
        {
            mode inside;
            levels ((1E15 2));
        }

	sphere2
        {
            mode inside;
            levels ((1E15 1));
        }

    }

    locationInMesh (6.2 7.3 4.3);
    allowFreeStandingZoneFaces true;
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 1;
    tolerance 4.0;
    nSolveIter 50;
    nRelaxIter 5;
    // Feature snapping

    //- Number of feature edge snapping iterations.
    //  Leave out altogether to disable.
    nFeatureSnapIter 10;

    //- Detect (geometric only) features by sampling the surface
    //  (default=false).
    implicitFeatureSnap false;

    //- Use castellatedMeshControls::features (default = true)
    explicitFeatureSnap true;

    //- Detect points on multiple surfaces (only for explicitFeatureSnap)
    multiRegionFeatureSnap false;
}



// Settings for the layer addition.
addLayersControls
{
    // Are the thickness parameters below relative to the undistorted
    // size of the refined cell outside layer (true) or absolute sizes (false).
    relativeSizes false;

    // Layer thickness specification. This can be specified in one of following
    // ways:
    // - expansionRatio and finalLayerThickness (cell nearest internal mesh)
    // - expansionRatio and firstLayerThickness (cell on surface)
    // - overall thickness and firstLayerThickness
    // - overall thickness and finalLayerThickness
    // - overall thickness and expansionRatio
    //
    // Note: the mode thus selected is global, i.e. one cannot override the
    //       mode on a per-patch basis (only the values can be overridden)

    // Expansion factor for layer mesh
    expansionRatio 1.0;

    // Wanted thickness of the layer furthest away from the wall.
    // If relativeSizes this is relative to undistorted size of cell
    // outside layer.
    //finalLayerThickness 0.3;

    // Wanted thickness of the layer next to the wall.
    // If relativeSizes this is relative to undistorted size of cell
    // outside layer.
    firstLayerThickness 0.4;

    // Wanted overall thickness of layers.
    // If relativeSizes this is relative to undistorted size of cell
    // outside layer.
    // thickness 0.5

    // Minimum overall thickness of total layers. If for any reason layer
    // cannot be above minThickness do not add layer.
    // If relativeSizes this is relative to undistorted size of cell
    // outside layer..
    minThickness 0.4;


    // Per final patch (so not geometry!) the layer information
    // Note: This behaviour changed after 21x. Any non-mentioned patches
    //       now slide unless:
    //          - nSurfaceLayers is explicitly mentioned to be 0.
    //          - angle to nearest surface < slipFeatureAngle (see below)
    layers
    {
        terrain
        {
            nSurfaceLayers 2;

        }
        /*maxY
        {
            nSurfaceLayers 1;
            // Per patch layer data
            expansionRatio      1.3;
            finalLayerThickness 0.3;
            minThickness        0.1;
        }*/

        // Disable any mesh shrinking and layer addition on any point of
        // a patch by setting nSurfaceLayers to 0
        //frozenPatches
        //{
        //    nSurfaceLayers 0;
        //}
    }

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow 0;

    // Advanced settings

    // Static analysis of starting mesh

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 45;

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio 0.5;


    // Patch displacement

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 1;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;

    // Medial axis analysis

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130
    // in 17x.
    minMedialAxisAngle 90;

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio 0.3;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 3;

    // Optional: limit the number of steps walking away from the surface.
    // Default is unlimited.
    // nMedialAxisIter 10;

    // Optional: smooth displacement after medial axis determination.
    // default is 0.
    // nSmoothDisplacement 90;

    // (wip)Optional: do not extrude a point if none of the surrounding points is
    // not extruded. Default is false.
    // detectExtrusionIsland true;

    // Mesh shrinking

    // Optional: at non-patched sides allow mesh to slip if extrusion
    // direction makes angle larger than slipFeatureAngle. Default is
    // 0.5*featureAngle.
    slipFeatureAngle 30;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;

    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;

    // Overall max number of layer addition iterations. The mesher will
    // exit if it reaches this number of iterations; possibly with an
    // illegal mesh.
    nLayerIter 50;

    // Max number of iterations after which relaxed meshQuality controls
    // get used. Up to nRelaxedIter it uses the settings in
    // meshQualityControls,
    // after nRelaxedIter it uses the values in
    // meshQualityControls::relaxed.
    nRelaxedIter 20;

    // Additional reporting: if there are just a few faces where there
    // are mesh errors (after adding the layers) print their face centres.
    // This helps in tracking down problematic mesh areas.
    // additionalReporting true;

}


// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    maxNonOrtho 65;
    maxBoundarySkewness 20;
    maxInternalSkewness 4;
    maxConcave 80;
    minVol 1e-13;
    minTetQuality 1e-30;
    minArea -1;
    minTwist 0.05;
    minDeterminant 0.001;
    minFaceWeight 0.05;
    minVolRatio 0.01;
    minTriangleTwist -1;
    // minVolCollapseRatio 0.5;
    nSmoothScale 4;
    errorReduction 0.75;
    relaxed
    {
        maxNonOrtho 75;
    }
}


// Advanced
mergeTolerance 1e-6;


// ************************************************************************* //
